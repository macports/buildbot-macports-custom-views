# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    py36_node_10_linux:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
      node_version: 10.x
    py36_node_12_linux:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
      node_version: 12.x
    py37_node_10_linux:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
      node_version: 10.x
    py37_node_12_linux:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
      node_version: 12.x
    py36_node_10_mac:
      imageName: 'macos-10.14'
      python.version: '3.6'
      node_version: 10.x
    py36_node_12_mac:
      imageName: 'macos-10.14'
      python.version: '3.6'
      node_version: 12.x
    py37_node_10_mac:
      imageName: 'macos-10.14'
      python.version: '3.7'
      node_version: 10.x
    py37_node_12_mac:
      imageName: 'macos-10.14'
      python.version: '3.7'
      node_version: 12.x

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- task: NodeTool@0 
  inputs:
    versionSpec: $(node_version)
  displayName: 'Use node $(node_version)'

- script: python -m pip install --upgrade pip
  displayName: 'Install pip'

- script: pip install buildbot buildbot-pkg buildbot-worker buildbot-www
  displayName: 'Install buildbot'

- script: npm install
  displayName: 'Install npm dependencies'

- script: pip install -e .
  displayName: 'Install plugin'

- script: |
    npm run test
    npm run lint
  displayName: 'npm tests'
